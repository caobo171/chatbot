{"version":3,"sources":["logo.svg","containers/botContainer.js","AppMain.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SpeechRecognition","window","webkitSpeechRecognition","SpeechSynthesis","SpeechSynthesisUtterance","IMAGE","normal","hearing","thinking","TRIGGER_END","WARNING","FAQs","luyện nghe","important","sub","responses","luyện nói","luyện đọc","luyện viết","tự học hay trung tâm","ơi","bắt đầu","trung bình","học","có thể","botContainer","_Container","BotContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","processing","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","final_script","scriptDeleteSpace","response","dialog","res","finish","keys","i","_i","_i2","wrap","_context","prev","next","replace","toLocaleLowerCase","abrupt","setState","image","state","console","log","axios","post","message","headers","Authorization","concat","user","accessToken","sent","push","question","index","length","interim","every","e","indexOf","some","status","data","responseData","mentors","toConsumableArray","map","name","organization","users","avatar","message1","address","stop","_x","apply","arguments","sendMessage","init","localStorage","getItem","JSON","parse","recognition","lang","interimResults","onstart","event","onresult","final_transcript","interim_transcript","results","onend","resultIndex","isFinal","transcript","m","toUpperCase","inherits","Container","bot","AppMain","text","document","addEventListener","keyCode","_this2","react_default","createElement","className","unstated_es","to","bind","style","paddingTop","alt","src","height","radius","id","onClick","removeItem","history","rootPath","sort","b","Fragment","key","userAvatar","start","value","onChange","target","placeholder","React","Component","withRouter","Login","password","onChangeHandler","defineProperty","onSubmitHandler","preventDefault","userName","setItem","stringify","toast","success","error","class","type","href","App","componentDidMount","location","pathname","path","hostname","react_router_dom","react_router","exact","component","react_toastify","Boolean","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"dev/static/js/main.7aa79e77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"dev/static/media/logo.5d5d9eef.svg\";","import { Container } from 'unstated-x'\n\nimport axios from 'axios'\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst SpeechSynthesis = window.SpeechSynthesis\nconst SpeechSynthesisUtterance = window.SpeechSynthesisUtterance\n\n\n\nfunction capitalize(s) {\n    var first_char = /\\S/;\n    return s.replace(first_char, function (m) { return m.toUpperCase(); });\n}\n\nexport const IMAGE = {\n    'normal': 'https://i.imgur.com/ilmoJsC.png',\n    'hearing': 'https://i.imgur.com/uS0pZYx.png',\n    'thinking': 'https://i.imgur.com/y5Uc9mL.png'\n}\nconst TRIGGER_END = ['kếtthúc', 'thếthôi', 'hếtrồi', 'xongrồi']\nconst WARNING = ['màyngu', 'bạnngu']\n\n\nconst FAQs = {\n    \"luyện nghe\": {\n        important: [\"nghe\"],\n        sub: [\"cảithiện\", \"nângcao\", \"nâng\", \"luyện\"],\n        responses: [\n            \"Bạn có thể tham khảo những nguồn sau:\",\n            `https://nghetienganhpro.com/luyen-nghe-mat-goc-tieng-anh/`,\n            `https://ngocbach.com/category/thu-vien/listenting/`,\n            `https://www.welevn.com/`\n        ]\n    },\n    \"luyện nói\": {\n        important: [\"nói\"],\n        sub: [\"cảithiện\", \"nângcao\", \"nâng\", \"luyện\", \"thếcòn\"],\n        responses: [\n            \"Bạn đọc thử  nhé :\",\n            `https://www.youtube.com/user/proworkshop`,\n            `https://engbreaking.com/`,\n            'https://ngocbach.com/category/thu-vien/speaking-thu-vien/'\n        ]\n    },\n    \"luyện đọc\": {\n        important: [\"đọc\"],\n        sub: [\"cảithiện\", \"nângcao\", \"nâng\", \"luyện\", \"thếcòn\"],\n        responses: [\n            \"Bạn có thể tham khảo những nguồn sau:\",\n            `https://langmaster.edu.vn/10-website-giup-bnaj-luyen-ky-nang-doc-sieu-dang-a15i668.html`,\n            `https://x3english.com/cach-doc-tieng-anh`\n        ]\n    },\n    \"luyện viết\": {\n        important: [\"viết\"],\n        sub: [\"cảithiện\", \"nângcao\", \"nâng\", \"luyện\", \"thếcòn\"],\n        responses: [\n            \"Bạn có tham khảo mấy trang này nhé:\",\n            `https://ngocbach.com/category/thu-vien/writing-thu-vien/`,\n            `https://langmaster.edu.vn/12-loi-khuyen-dat-gia-cho-nguoi-bat-dau-luyen-viet-tieng-anh-a15i951.html`,\n            `https://jolo.edu.vn/vi/thu-vien/bi-quyet-ielts/luyen-viet-ielts-cho-nguoi-moi-bat-dau.html`\n\n        ]\n    },\n    \"tự học hay trung tâm\": {\n        important: [\"hay\", \"trungtâm\", \"tựhọc\"],\n        sub: [\"trungtâm\"],\n        responses: [\n            \"Theo mình thì tự học sẽ tốt hơn !!\",\n            \"Nhưng nếu bạn thấy không hợp và không chủ động được thì nên đi học Trung tâm :))) \"\n        ]\n    },\n    \"ơi\": {\n        important: [\"ơi\"],\n        sub: [\"bạn\", \"ơi\"],\n        responses: [\n            \"Ơi !!\"\n        ]\n    },\n    \"bắt đầu\": {\n        important: [\"bắtđầu\"],\n        sub: [\"từđâu\", \"thếnào\", \"ởđâu\"],\n        responses: [\n            \"Bạn có thể tham khảo những nguồn sau\",\n            `https://vnexpress.net/giao-duc/sau-loi-khuyen-hoc-tieng-anh-cho-tan-sinh-vien-3275824.html`,\n            `http://learningeffortlessenglish.com/huong-dan-hoc/307/huong-dan-hoc-effortless-english-ban-tieng-viet-.html`,\n            `https://engbreaking.com/`\n        ]\n    },\n    'trung bình': {\n        important: [\"học\"],\n        sub: [\"cũngđược\", \"bìnhthường\", \"khôngdốt\", \"tàmtạm\"],\n        responses: [\n            `Mình nghĩ bạn nên tham khảo các nguồn online`,\n            `Nếu không lên được thì hãy nghĩ đến nhưng trung tâm uy tín như:`,\n            `British Council, IELTS Workshop`\n        ]\n    },\n    'học': {\n        important: ['học'],\n        sub: [\"với\", \"thếnào\", \"đượckhông\", \"rasao\"],\n        responses: [\n            `Ừ ,bạn yên tâm, mình sẽ cố gắng hết sức !! Bạn hỏi tiếp đi !!`\n        ]\n    },\n    \"có thể\": {\n        important: ['cóthể', 'gì'],\n        sub: ['cóthể'],\n        responses: [\n            'Mình có thể giúp bạn tìm động bọn và sự phụ để học tiếng Anh !',\n            'Bạn có câu hỏi gì khi bắt đầu với Tiếng Anh thì cứ hỏi mình :))',\n            'Mình còn dốt nhưng mình sẽ thông minh hơn trong tương lai !! '\n\n        ]\n    }\n\n}\n\n\nexport class BotContainer extends Container {\n    constructor(props) {\n        super(props)\n        this.recognition = null\n        this.state = {\n            dialog: [],\n            interim: null,\n            image: IMAGE.normal,\n            user: null\n        }\n    }\n\n\n    processing = async (final_script) => {\n\n        const scriptDeleteSpace = final_script.replace(/\\s/g, \"\").toLocaleLowerCase()\n        if (scriptDeleteSpace === '') return\n        this.setState({ image: IMAGE.thinking })\n        let response = []\n        let dialog = this.state.dialog\n        console.log('check script', scriptDeleteSpace)\n\n\n        const res = await axios.post('http://34.87.30.67:8080/chat', {\n            message: final_script\n        }, {\n                headers: {\n                    Authorization: `Bearer ${this.state.user.accessToken}`\n                }\n            })\n\n\n\n        window.res = res\n\n        console.log('check res', res)\n\n        const finish = () => {\n            dialog.push({\n                response,\n                question: final_script,\n                index: dialog.length\n            })\n\n            this.setState({\n                image: IMAGE.normal, dialog,\n                interim: null\n            })\n        }\n\n\n\n        const keys = Object.keys(FAQs)\n        for (let i = 0; i < keys.length; i++) {\n            const faq = FAQs[keys[i]]\n            if (\n                FAQs[keys[i]].important.every(e =>\n                    scriptDeleteSpace.indexOf(e) !== -1\n                ) &&\n                FAQs[keys[i]].sub.some(e =>\n                    scriptDeleteSpace.indexOf(e) !== -1)) {\n                response = FAQs[keys[i]].responses\n                finish()\n                return\n            }\n        }\n\n        for (let i = 0; i < WARNING.length; i++) {\n            if (scriptDeleteSpace.indexOf(WARNING[i]) !== -1) {\n                response = ['Bạn ăn nói cho cẩn thận , đá giờ']\n                finish()\n                return\n            }\n        }\n\n        for (let i = 0; i < TRIGGER_END.length; i++) {\n            if (scriptDeleteSpace.indexOf(TRIGGER_END[i]) !== -1) {\n                response = ['Chảo bạn nhé !!']\n                finish()\n                return\n            }\n        }\n\n\n        if (res.status === 200) {\n            if (res.data.responseData.mentors) {\n                response = [\n                    res.data.responseData.message,\n                    ...res.data.responseData.mentors.map(e => `${e.name} (${e.organization})`),\n\n                ]\n                finish()\n                return\n            } else if (res.data.responseData.users) {\n                response = [\n                    res.data.responseData.message,\n                    ...res.data.responseData.users.map(e => {\n                        return {\n                            image: e.avatar,\n                            message1: `${e.name},địa chỉ ở ${e.address.address}`\n                        }\n                    }),\n\n                ]\n                finish()\n                return\n            }\n            else {\n                response = [\n                    res.data.responseData.message\n                ]\n            }\n\n        }\n\n        finish()\n\n\n    }\n\n    sendMessage = (final_script) => {\n        this.processing(final_script)\n    }\n\n    init = () => {\n        const user = localStorage.getItem('angelhack')\n        if (user) {\n            this.setState({ user: JSON.parse(user) })\n        }\n        this.recognition = new SpeechRecognition();\n        //recognition.continuous = false;\n        this.recognition.lang = 'vi-VN';\n        this.recognition.interimResults = true;\n\n        this.recognition.onstart = (event) => {\n            this.setState({ image: IMAGE.hearing })\n        }\n        this.recognition.onresult = (event) => {\n            let final_transcript = '';\n            var interim_transcript = '';\n            if (typeof (event.results) == 'undefined') {\n                this.recognition.onend = null;\n                this.recognition.stop();\n                return;\n            }\n\n            for (var i = event.resultIndex; i < event.results.length; ++i) {\n\n                if (event.results[i].isFinal) {\n                    console.log('check final', event.results[i][0].transcript)\n                    final_transcript += event.results[i][0].transcript;\n                    this.processing(final_transcript)\n                } else {\n                    interim_transcript += event.results[i][0].transcript;\n\n                    this.setState({ interim: interim_transcript })\n                }\n            }\n\n            final_transcript = capitalize(final_transcript);\n\n            // if (final_transcript || interim_transcript) {\n            //     showButtons('inline-block');\n            // }\n\n        }\n\n        this.recognition.onend = (event) => {\n            this.setState({ image: IMAGE.normal })\n        }\n\n        // this.synsthesis = window.speechSynthesis\n        // this.utterThis = new SpeechSynthesisUtterance(\"Hi !! I'm a god. Can you please help me .... tell me what's the weather today? \")\n        // this.utterThis.pitch = Number(this.state.pitch)\n    }\n\n\n\n\n\n}\n\nconst botContainer = new BotContainer()\n\nexport default botContainer\nwindow.bot = botContainer","import React from 'react';\nimport logo from './logo.svg';\nimport botContainer, { IMAGE } from './containers/botContainer'\nimport { Provider, SubscribeOne } from 'unstated-x'\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport { rootPath } from './App'\n\nclass AppMain extends React.Component {\n\n  constructor(props) {\n    super(props)\n    botContainer.init()\n    this.state = {\n      text: ''\n    }\n\n    document.addEventListener('keydown', (event) => {\n      if (event.keyCode === 13) {\n        botContainer.sendMessage(this.state.text)\n        this.setState({ text: '' })\n      }\n    });\n  }\n  render() {\n    return (\n\n      <div className=\"App\">\n        <SubscribeOne to={botContainer} bind={['dialog', 'interim', 'image', 'user']}>\n          {\n            bot => {\n              console.log('check bot', bot)\n              return (\n                <div className=\"container-fluid h-100\" >\n                  <div className=\"row justify-content-center h-100\" style={{ paddingTop: '30px' }}>\n                    <div className=\"col-md-8 col-xl-6 chat\">\n                      <div className=\"card\">\n                        <div className=\"card-header msg_head\">\n                          <div className=\"d-flex bd-highlight\">\n                            <div className=\"img_cont\">\n                              <img alt=\"test\" src={bot.state.image} className=\"rounded-circle user_img\" />\n                              <span className=\"online_icon\"></span>\n                            </div>\n                            <div className=\"user_info\">\n                              <span>Chat with <img alt=\"test\" src=\"https://i.imgur.com/7RoEscK.png\" style={{ height: '30px', radius: '30%' }} /></span>\n\n                            </div>\n                            <div className=\"video_cam\">\n                              {/* <span><i className=\"fas fa-video\"></i></span>\n                        <span><i className=\"fas fa-phone\"></i></span> */}\n                            </div>\n                          </div>\n                          <div id=\"action_menu_btn\"><button className=\"btn\" onClick={() => {\n                            localStorage.removeItem('angelhack');\n                            this.props.history.push(`${rootPath}/login`)\n                          }}>Logout</button></div>\n                        </div>\n\n\n                        <div className=\"card-body msg_card_body\">\n\n                          {\n                            bot.state.interim && (\n                              <div className=\"d-flex justify-content-end mb-4\">\n                                <div className=\"msg_cotainer_send\">\n                                  {bot.state.interim}\n                                </div>\n                                <div className=\"img_cont_msg\">\n                                  <img alt=\"test\" src=\"https://i.imgur.com/ilmoJsC.png\" className=\"rounded-circle user_img_msg\" />\n                                </div>\n\n                              </div>\n                            )\n                          }\n\n                          {\n                            bot.state.image === IMAGE.hearing ? (\n                              <div className=\"d-flex justify-content-start mb-4\">\n                                <div className=\"img_cont_msg\">\n                                  <img alt=\"test\" src=\"https://i.imgur.com/ilmoJsC.png\" className=\"rounded-circle user_img_msg\" />\n                                </div>\n                                <div className=\"msg_cotainer\">\n                                  I'm hearing ...\n                                  </div>\n                              </div>\n                            ) : (bot.state.image === IMAGE.thinking) && (\n                              <div className=\"d-flex justify-content-start mb-4\">\n                                <div className=\"img_cont_msg\">\n                                  <img alt=\"test\" src=\"https://i.imgur.com/ilmoJsC.png\" className=\"rounded-circle user_img_msg\" />\n                                </div>\n                                <div className=\"msg_cotainer\">\n                                  I'm thinking ...\n                                </div>\n                              </div>\n                            )\n                          }\n                          {\n                            bot.state.dialog.sort((a, b) => b.index - a.index).map((e, index) => {\n                              return (\n                                <React.Fragment key={`${e.question}${index}`}>\n\n                                  {\n                                    e.response.map((res, index) => {\n                                      return (\n                                        res.image ? (\n                                          <div key={res.message1} className=\"d-flex justify-content-start mb-1\" >\n                                            {\n                                              index === 0 && (\n                                                <div className=\"img_cont_msg\">\n                                                  <img alt=\"test\" src=\"https://i.imgur.com/ilmoJsC.png\" className=\"rounded-circle user_img_msg\" />\n                                                </div>\n                                              )\n                                            }\n                                            <div className=\"msg_cotainer\">\n                                              <img alt=\"test\" src={res.image} className=\"user_img_msg\" />\n                                              {` ${res.message1}`}\n                                            </div>\n\n                                          </div>\n                                        ) :\n                                          (<div key={res} className=\"d-flex justify-content-start mb-1\">\n                                            {\n                                              index === 0 && (\n                                                <div className=\"img_cont_msg\">\n                                                  <img alt=\"test\" src=\"https://i.imgur.com/ilmoJsC.png\" className=\"rounded-circle user_img_msg\" />\n                                                </div>\n                                              )\n                                            }\n\n                                            <div className=\"msg_cotainer\">\n                                              {res}\n                                            </div>\n                                          </div>\n                                          )\n\n                                      )\n                                    })\n\n                                  }\n                                  <div className=\"d-flex justify-content-end mb-4 mt-3\">\n                                    <div className=\"msg_cotainer_send\">\n                                      {e.question}\n                                    </div>\n                                    <div className=\"img_cont_msg\">\n                                      <img alt=\"test\" src={bot.state.user.user.userAvatar} className=\"rounded-circle user_img_msg\" />\n                                    </div>\n\n                                  </div>\n\n                                </React.Fragment>\n                              )\n                            })\n                          }\n\n\n                        </div>\n\n                        <div className=\"card-footer\">\n                          <div className=\"input-group\">\n                            <div className=\"input-group-append\"\n                              onClick={() => {\n                                try {\n                                  botContainer.recognition.start()\n                                } catch (e) {\n\n                                }\n                              }}>\n                              <span className=\"input-group-text attach_btn\"><i className=\"fas fa-microphone\"></i></span>\n                            </div>\n                            <textarea value={this.state.text}\n                              onChange={(e) => { this.setState({ text: e.target.value }) }}\n                              className=\"form-control type_msg\" placeholder=\"Type your message...\"></textarea>\n                            <div className=\"input-group-append\">\n                              <span className=\"input-group-text send_btn\"\n                                onClick={() => {\n                                  botContainer.sendMessage(this.state.text)\n                                  this.setState({ text: '' })\n                                }}\n                              ><i className=\"fas fa-location-arrow\"></i></span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )\n            }\n          }\n        </SubscribeOne>\n      </div >\n    );\n  }\n}\n\nexport default withRouter(AppMain)\n","import React from 'react'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport { withRouter } from 'react-router-dom'\nimport { rootPath } from './App'\n\n\nclass Login extends React.Component {\n\n    state = {\n        user: '',\n        password: ''\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmitHandler = async (e) => {\n        e.preventDefault()\n        console.log('check ', this.state.user, this.state.password)\n        const res = await axios.post('http://34.87.30.67:8080/login', {\n            userName: this.state.user,\n            password: this.state.password\n        })\n\n        if (res.status === 200) {\n            localStorage.setItem('angelhack', JSON.stringify(res.data.responseData))\n            toast.success('Login Successful!!')\n            this.props.history.push(`${rootPath}/`)\n        }else{\n            toast.error('Login Failed')\n        }\n        console.log('check res', res)\n\n    }\n    render() {\n        return (\n            <div class=\"wrapper fadeInDown\">\n                <div id=\"formContent\">\n                    <div class=\"fadeIn first\">\n                        <img src=\"https://i.imgur.com/I59lFe8.png\" id=\"icon\" alt=\"User Icon\" />\n                    </div>\n\n                    <div>\n                        <input onChange={this.onChangeHandler} type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"user\" placeholder=\"login\" />\n                        <input onChange={this.onChangeHandler} type=\"password\" id=\"password\" class=\"fadeIn third\" name=\"password\" placeholder=\"password\" />\n                        <input\n                            onClick={this.onSubmitHandler}\n                            type=\"submit\" class=\"fadeIn fourth\" value=\"Log In\" />\n                    </div>\n\n\n                    <div id=\"formFooter\">\n                        <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Login)","import React from 'react'\nimport { Provider, SubscribeOne } from \"unstated-x\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport botContainer from './containers/botContainer'\nimport AppMain from './AppMain';\nimport Login from './Login'\n\nexport default class App extends React.Component {\n    constructor(props) {\n\n        super(props);\n        this.path = window.location.href.indexOf('/dev') !== -1 || window.location.hostname === 'localhost' ? '/dev' : ''\n\n    }\n    componentDidMount = () => {\n        const user = localStorage.getItem('angelhack')\n        if (!user && window.location.pathname !== this.path + '/login') {\n            window.location.pathname = this.path + '/login'\n        } else if (user && window.location.pathname !== this.path + '/') {\n            window.location.pathname = this.path + '/'\n        }\n\n    }\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <Route path={this.path + `/`} exact component={AppMain} />\n                    <Route path={this.path + `/login`} exact component={Login} />\n                </Router >\n                <ToastContainer />\n\n            </Provider >\n        )\n    }\n\n\n}\n\n\nexport const rootPath = window.location.href.indexOf('/dev') !== -1 || window.location.hostname ==='localhost'? '/dev' : ''","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}